<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>HeyDevOps</title><link>http://mcsrainbow.github.io/</link><description></description><lastBuildDate>Fri, 26 Sep 2014 15:39:00 +0800</lastBuildDate><item><title>Setup GlusterFS with Distributed Replicated Volumes and Native client</title><link>http://mcsrainbow.github.io/articles/setup-glusterfs-with-distributed-replicated-volumes-and-native-client.html</link><description>&lt;p&gt;&lt;strong&gt;OS: &lt;/strong&gt; CentOS 6.4 x86_64 Minimal&lt;/p&gt;
&lt;h4&gt;1. Install packages, on idc1-server{1-4}:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;# wget -P /etc/yum.repos.d http://download.gluster.org/pub/gluster/glusterfs/LATEST/CentOS/glusterfs-epel.repo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# yum install -y glusterfs glusterfs-server glusterfs-fuse&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# /etc/init.d/glusterd start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# chkconfig glusterd on&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;2. Configure peers, just on idc1-server1:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# gluster peer probe idc1-server2&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;peer probe: success
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# gluster peer probe idc1-server3&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;peer probe: success
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# gluster peer probe idc1-server4&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;peer probe: success
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The following step is very important with the version 3.4.3!&lt;/p&gt;
&lt;p&gt;If configured all peers with hostname on one host, must remember to recreate the peer of this host on another host.&lt;/p&gt;
&lt;p&gt;Otherwise all other hosts cannot recognize this host by hostname.
10.1.1.35 is the ip address of idc1-server1, detach it then probe with hostname.&lt;/p&gt;
&lt;p&gt;Just on idc1-server2:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-server2 ~]# gluster peer detach 10.1.1.35&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;peer detach: success
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc1-server2 ~]# gluster peer probe idc1-server1&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;peer probe: success
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just on idc1-server2:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-server2 ~]# gluster peer status&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Number of Peers: 3

Hostname: idc1-server3
Uuid: 01f25251-9ee6-40c7-a322-af53a034aa5a
State: Peer in Cluster (Connected)

Hostname: idc1-server4
Uuid: 212295a6-1f38-4a1e-968c-577241318ff1
State: Peer in Cluster (Connected)

Hostname: idc1-server1
Port: 24007
Uuid: ed016c4e-7159-433f-88a5-5c3ebd8e36c9
State: Peer in Cluster (Connected)
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;3. Create directories, on idc1-server{1-4}:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;# mkdir -p /usr/local/share/{datavolume1,datavolume2,datavolume3}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# chown -R root:root /mnt/{datavolume1,datavolume2,datavolume3}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# ls -l /usr/local/share/&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;total 24
drwxr-xr-x.  2 root root 4096 Sep 23  2011 applications
drwxr-xr-x   2 root root 4096 Apr  1 12:19 datavolume2
drwxr-xr-x.  2 root root 4096 Sep 23  2011 info
drwxr-xr-x. 21 root root 4096 Feb 20  2013 man
drwxr-xr-x   2 root root 4096 Apr  1 12:19 datavolume1
drwxr-xr-x   2 root root 4096 Apr  1 12:19 datavolume3
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;4. Create Distributed Replicated Volumes, just on idc1-server1:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# gluster volume create datavolume1 replica 2 transport tcp idc1-server1:/usr/local/share/datavolume1 idc1-server2:/usr/local/share/datavolume1 idc1-server3:/usr/local/share/datavolume1 idc1-server4:/usr/local/share/datavolume1 force&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;volume create: datavolume1: success: please start the volume to access data
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# gluster volume create datavolume2 replica 2 transport tcp idc1-server1:/usr/local/share/datavolume2 idc1-server2:/usr/local/share/datavolume2 idc1-server3:/usr/local/share/datavolume2 idc1-server4:/usr/local/share/datavolume2 force&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;volume create: datavolume2: success: please start the volume to access data
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# gluster volume create datavolume3 replica 2 transport tcp idc1-server1:/usr/local/share/datavolume3 idc1-server2:/usr/local/share/datavolume3 idc1-server3:/usr/local/share/datavolume3 idc1-server4:/usr/local/share/datavolume3 force&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;volume create: datavolume3: success: please start the volume to access data
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# gluster volume start datavolume1&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;volume start: datavolume1: success
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# gluster volume start datavolume2&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;volume start: datavolume2: success
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# gluster volume start datavolume3&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;volume start: datavolume3: success
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# gluster volume info&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Volume Name: datavolume1
Type: Distributed-Replicate
Volume ID: aea76c2a-b754-4037-9634-c2062e2955c3
Status: Started
Number of Bricks: 2 x 2 = 4
Transport-type: tcp
Bricks:
Brick1: idc1-server1:/usr/local/share/datavolume1
Brick2: idc1-server2:/usr/local/share/datavolume1
Brick3: idc1-server3:/usr/local/share/datavolume1
Brick4: idc1-server4:/usr/local/share/datavolume1

Volume Name: datavolume2
Type: Distributed-Replicate
Volume ID: 1ed65c6e-ee23-475a-82c7-2967e2fc2569
Status: Started
Number of Bricks: 2 x 2 = 4
Transport-type: tcp
Bricks:
Brick1: idc1-server1:/usr/local/share/datavolume2
Brick2: idc1-server2:/usr/local/share/datavolume2
Brick3: idc1-server3:/usr/local/share/datavolume2
Brick4: idc1-server4:/usr/local/share/datavolume2

Volume Name: datavolume3
Type: Distributed-Replicate
Volume ID: b63bb4ea-bd37-4dd6-9a4c-230e6d236afa
Status: Started
Number of Bricks: 2 x 2 = 4
Transport-type: tcp
Bricks:
Brick1: idc1-server1:/usr/local/share/datavolume3
Brick2: idc1-server2:/usr/local/share/datavolume3
Brick3: idc1-server3:/usr/local/share/datavolume3
Brick4: idc1-server4:/usr/local/share/datavolume3
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;5. Configure the Network ACL, just on idc1-server1:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# gluster volume set datavolume1 auth.allow 10.1.1.*,10.1.2.*&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;6. Tests on idc1-client15, install the version '-3.4.0.57rhs-1.el6_5' which supports option: 'backup-volfile-servers'&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 ~]# yum install -y glusterfs-3.4.0.57rhs-1.el6_5 glusterfs-libs-3.4.0.57rhs-1.el6_5 glusterfs-fuse-3.4.0.57rhs-1.el6_5&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 ~]# mkdir -p /mnt/{datavolume1,datavolume2,datavolume3}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 ~]# chown -R root:root /mnt/{datavolume1,datavolume2,datavolume3}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 ~]# mount -t glusterfs -o backup-volfile-servers=idc1-server2:idc1-server3:idc1-server4,ro idc1-server1:datavolume1 /mnt/datavolume1/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 ~]# mount -t glusterfs -o backup-volfile-servers=idc1-server2:idc1-server3:idc1-server4,ro idc1-server1:datavolume2 /mnt/datavolume2/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 ~]# mount -t glusterfs -o backup-volfile-servers=idc1-server2:idc1-server3:idc1-server4,ro idc1-server1:datavolume3 /mnt/datavolume3/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 ~]# df -h&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Filesystem            Size  Used Avail Use% Mounted on
/dev/mapper/vg_t-lv_root
                       59G  7.7G   48G  14% /
tmpfs                 3.9G     0  3.9G   0% /dev/shm
/dev/xvda1            485M   33M  428M   8% /boot
idc1-server3:datavolume1     98G  8.6G   85G  10% /mnt/datavolume1
idc1-server3:datavolume2     98G  8.6G   85G  10% /mnt/datavolume2
idc1-server3:datavolume3     98G  8.6G   85G  10% /mnt/datavolume3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Tests:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Write on idc1-client15 mount point /mnt/datavolume1:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 ~]# umount /mnt/datavolume1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 ~]# mount -t glusterfs idc1-server3:datavolume1 /mnt/datavolume1/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 ~]# echo "This is idc1-client15" &amp;gt; /mnt/datavolume1/hello.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 ~]# mkdir /mnt/testdir&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# ls /usr/local/share/datavolume1/&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hello.txt testdir
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Saw hello.txt and testdir&lt;/p&gt;
&lt;p&gt;Write on idc1-server1 volumes dir /usr/local/share/datavolume1:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# echo "This is idc1-server1" &amp;gt; /usr/local/share/datavolume1/hello.2.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# mkdir /usr/local/share/datavolume1/test2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 ~]# ls /mnt/datavolume1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 datavolume1]# ls -l /mnt/datavolume1&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hello.txt testdir
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Didn't see hello.2.txt and test2&lt;/p&gt;
&lt;p&gt;Write on idc1-server1 mount point /mnt/datavolume1:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# mount -t glusterfs idc1-server1:datavolume1 /mnt/datavolume1/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# echo "This is idc1-server1" &amp;gt; /mnt/datavolume1/hello.3.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-server1 ~]# mkdir /mnt/datavolume1/test3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc1-client15 datavolume1]# ls /mnt/datavolume1&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hello.2.txt  hello.3.txt hello.txt  test2  test3  testdir
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Saw hello.3.txt and test3, and the hello.2.txt and test2 also.&lt;/p&gt;
&lt;p&gt;So I guess if we just write or delete file outside the mount point, it doesn't notify other nodes, so the changes didn't take effect.
We should mount it on all servers which we want to write or delete files.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Other Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Delete:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume stop datavolume1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume delete datavolume1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Move:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster peer detach idc1-server4&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ACL:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume set datavolume1 auth.allow 10.1.1.*,10.1.2.*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster peer probe idc1-server5&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster peer probe idc1-server6&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume add-brick datavolume1 idc1-server5:/usr/local/share/datavolume1 idc1-server6:/usr/local/share/datavolume1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Shrink and migration:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume remove-brick datavolume1 idc1-server1:/usr/local/share/datavolume1 idc1-server5:/usr/local/share/datavolume1 start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume remove-brick datavolume1 idc1-server1:/usr/local/share/datavolume1 idc1-server5:/usr/local/share/datavolume1 status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume remove-brick datavolume1 idc1-server1:/usr/local/share/datavolume1 idc1-server5:/usr/local/share/datavolume1 commit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Rebalance:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume rebalance datavolume1 start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume rebalance datavolume1 status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume rebalance datavolume1 stop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If idc1-server1 dead:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume replace-brick datavolume1 idc1-server1:/usr/local/share/datavolume1 idc1-server5:/usr/local/share/datavolume1 commit -force&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# gluster volume heal datavolume1 full&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mcsrainbow</dc:creator><pubDate>Fri, 26 Sep 2014 15:39:00 +0800</pubDate><guid isPermaLink="false">tag:mcsrainbow.github.io,2014-09-26:articles/setup-glusterfs-with-distributed-replicated-volumes-and-native-client.html</guid><category>GlusterFS</category><category>Distributed</category></item><item><title>Setup a new MySQL Service on Port 3307 without touching existing database</title><link>http://mcsrainbow.github.io/articles/setup-a-new-mysql-service-on-port-3307-without-touching-existing-database.html</link><description>&lt;p&gt;&lt;strong&gt;1. Create directories for MySQL_3307&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo mkdir -p /opt/mysql_3307/{data,tmp,run,binlogs,log}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo chown mysql:mysql /opt/mysql_3307/{data,tmp,run,binlogs,log}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Create configuration file for MySQL_3307&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo vim /etc/my_3307.cnf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[mysqld]&lt;/span&gt;
&lt;span class="c1"&gt;# basic settings&lt;/span&gt;
&lt;span class="na"&gt;datadir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/mysql_3307/data&lt;/span&gt;
&lt;span class="na"&gt;tmpdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/mysql_3307/tmp&lt;/span&gt;
&lt;span class="na"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/mysql_3307/run/mysqld.sock&lt;/span&gt;
&lt;span class="na"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;3307&lt;/span&gt;
&lt;span class="na"&gt;pid-file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/mysql_3307/run/mysqld.pid&lt;/span&gt;

&lt;span class="c1"&gt;# innodb settings&lt;/span&gt;
&lt;span class="na"&gt;default-storage-engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;INNODB&lt;/span&gt;
&lt;span class="na"&gt;innodb_file_per_table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;log-bin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/mysql_3307/binlogs/bin-log-mysqld&lt;/span&gt;
&lt;span class="na"&gt;log-bin-index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/mysql_3307/binlogs/bin-log-mysqld.index&lt;/span&gt;
&lt;span class="na"&gt;innodb_data_home_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/mysql_3307/data&lt;/span&gt;
&lt;span class="na"&gt;innodb_data_file_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;ibdata1:10M:autoextend&lt;/span&gt;
&lt;span class="na"&gt;innodb_log_group_home_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/mysql_3307/data&lt;/span&gt;

&lt;span class="c1"&gt;# server id&lt;/span&gt;
&lt;span class="na"&gt;server-id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;33071&lt;/span&gt;

&lt;span class="c1"&gt;# other settings&lt;/span&gt;
&lt;span class="k"&gt;[mysqld_safe]&lt;/span&gt;
&lt;span class="na"&gt;log-error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/mysql_3307/log/mysqld.log&lt;/span&gt;
&lt;span class="na"&gt;pid-file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/mysql_3307/run/mysqld.pid&lt;/span&gt;
&lt;span class="na"&gt;open-files-limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;8192&lt;/span&gt;

&lt;span class="k"&gt;[mysqlhotcopy]&lt;/span&gt;
&lt;span class="err"&gt;interactive-timeout&lt;/span&gt;

&lt;span class="k"&gt;[client]&lt;/span&gt;
&lt;span class="na"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;3307&lt;/span&gt;
&lt;span class="na"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/mysql_3307/run/mysqld.sock&lt;/span&gt;
&lt;span class="na"&gt;default-character-set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;utf8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;3. Initialize MySQL_3307&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo -i&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# su - mysql&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ mysql_install_db --user=mysql --datadir=/opt/mysql_3307/data/ --defaults-file=/etc/my_3307.cnf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ exit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# exit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Start MySQL_3307&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo mysqld_safe --defaults-file=/etc/my_3307.cnf --user=mysql &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. Stop MySQL_3307&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo pkill -kill -f "/etc/my_3307.cnf"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. Connect to MySQL_3307&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Must use mysql_3307 to connect MySQL_3307 if you use mysql client on local.&lt;/p&gt;
&lt;p&gt;Because &lt;code&gt;-P 3307&lt;/code&gt; and &lt;code&gt;--port=3307&lt;/code&gt; not work, mysql client will still connect the default port 3306.&lt;/p&gt;
&lt;p&gt;Have to connect via socket file.&lt;/p&gt;
&lt;p&gt;On other servers, it's ok. I searched on Google, this might be a bug.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ alias mysql_3307='mysql -S /opt/mysql_3307/run/mysqld.sock'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ mysql_3307 -uroot -p&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. Create service script for MySQL_3307&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo vim /etc/init.d/mysql_3307&lt;/code&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# MySQL daemon on Port 3307 start/stop/status script.&lt;/span&gt;
&lt;span class="c1"&gt;# by Dong Guo at 2014-03-19&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;

&lt;span class="nv"&gt;CONF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/my_3307.cnf&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;PIDFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/opt/mysql_3307/run/mysqld.pid&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; check_root&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$EUID&lt;/span&gt; -ne &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;This script must be run as root&amp;quot;&lt;/span&gt; 1&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;2
        &lt;span class="nb"&gt;exit&lt;/span&gt; 1
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

status&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt; -s &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PIDFILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;read&lt;/span&gt; mysqld_pid &amp;lt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PIDFILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;kill&lt;/span&gt; -0 &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;mysqld_pid&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; 2&amp;gt;/dev/null &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL (on Port 3307) running (&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;mysqld_pid&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;exit&lt;/span&gt; 0
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL (on Port 3307) is not running, but PID file exists&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;exit&lt;/span&gt; 1
    &lt;span class="k"&gt;fi&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL (on Port 3307) is not running&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt; 2
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

start&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt; -s &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PIDFILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;read&lt;/span&gt; mysqld_pid &amp;lt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PIDFILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;kill&lt;/span&gt; -0 &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;mysqld_pid&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; 2&amp;gt;/dev/null &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL (on Port 3307) is already running (&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;mysqld_pid&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;exit&lt;/span&gt; 0
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL (on Port 3307) is not running, but PID file exists&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;exit&lt;/span&gt; 1
    &lt;span class="k"&gt;fi&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Starting MySQL (on Port 3307)&amp;quot;&lt;/span&gt;
    mysqld_safe --defaults-file&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CONF&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; --user&lt;span class="o"&gt;=&lt;/span&gt;mysql &amp;gt;/dev/null 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

stop&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt; -s &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PIDFILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;read&lt;/span&gt; mysqld_pid &amp;lt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PIDFILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;kill&lt;/span&gt; -0 &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;mysqld_pid&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; 2&amp;gt;/dev/null &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Stopping MySQL (on Port 3307)&amp;quot;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; pkill -kill -f &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CONF&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        rm &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PIDFILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL (on Port 3307) is not running, but PID file exists&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;exit&lt;/span&gt; 1
    &lt;span class="k"&gt;fi&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL (on Port 3307) is not running&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt; 2
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

check_root
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in
    start&lt;span class="o"&gt;)&lt;/span&gt;
        start
        sleep 2
        status
        &lt;span class="p"&gt;;;&lt;/span&gt;
    stop&lt;span class="o"&gt;)&lt;/span&gt;
        stop
        sleep 2
        status
        &lt;span class="p"&gt;;;&lt;/span&gt;
    status&lt;span class="o"&gt;)&lt;/span&gt;
        status
        &lt;span class="p"&gt;;;&lt;/span&gt;
    *&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; $&lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|status}&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;exit&lt;/span&gt; 2
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;code&gt;$ sudo chmod +x /etc/init.d/mysql_3307&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo /etc/init.d/mysql_3307 status&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mcsrainbow</dc:creator><pubDate>Thu, 25 Sep 2014 18:18:00 +0800</pubDate><guid isPermaLink="false">tag:mcsrainbow.github.io,2014-09-25:articles/setup-a-new-mysql-service-on-port-3307-without-touching-existing-database.html</guid><category>MySQL</category></item><item><title>Create an Ansible Module and then use Module Provided Facts</title><link>http://mcsrainbow.github.io/articles/create-an-ansible-module-and-then-use-module-provided-facts.html</link><description>&lt;p&gt;Sometimes the default Ansible Facts are not enough.&lt;/p&gt;
&lt;p&gt;For example, Ansible doesn't provide "ansible_private_ipv4_address" which with private IP address.&lt;/p&gt;
&lt;p&gt;With it, we don't need to worry about which IP on which NIC should be used.&lt;/p&gt;
&lt;p&gt;But we can create an Ansible module and then use module provided 'Facts'.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The steps:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc-server2 ~]# ifconfig&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;eth0      Link encap:Ethernet  HWaddr 1B:2B:3B:4B:5B:6B
          inet addr:172.16.1.2  Bcast:172.16.1.255  Mask:255.255.252.0
...

eth1      Link encap:Ethernet  HWaddr 1A:2A:3A:4A:5A:6A
          inet addr:100.100.100.100  Bcast:100.100.100.255  Mask:255.255.255.240
...

lo        Link encap:Local Loopback 
          inet addr:127.0.0.1  Mask:255.0.0.0
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc-server1 ansible]# vim myfacts.yml&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;---
- hosts: idc-server2
  roles:
  - myfacts
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc-server1 ansible]# mkdir -p roles/myfacts/{tasks,templates}&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;---
- name: run myfacts module to get customized facts
  myfacts: get_facts=yes

- name: update file with the customized facts
  template: src=myfacts.txt.j2 dest=/tmp/myfacts.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc-server1 ansible]# mkdir -p library/heylinux&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[root@idc-server1 ansible]# vim library/heylinux/myfacts&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;ansible_private_ipv4_address : &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;ansible_private_ipv4_address&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc-server1 ansible]# vim /usr/share/ansible/heylinux/myfacts&lt;/code&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;shlex&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;commands&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_ansible_private_ipv4_address&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;iprex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(^192\.168)|(^10\.)|(^172\.1[6-9])|(^172\.2[0-9])|(^172\.3[0-1])&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getoutput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;/sbin/ifconfig |grep &amp;quot;Link encap&amp;quot; |awk &amp;#39;{print $1}&amp;#39; |grep -wv &amp;#39;lo&amp;#39;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;nics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;nics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;ipaddr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getoutput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;/sbin/ifconfig &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; |grep -w &amp;quot;inet addr&amp;quot; |cut -d: -f2 | awk &amp;#39;{print $1}&amp;#39;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iprex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ipaddr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;ansible_private_ipv4_address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ipaddr&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ansible_private_ipv4_address&lt;/span&gt;

&lt;span class="n"&gt;ansible_facts_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;changed&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;ansible_facts&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;args_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;args_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;arguments&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;shlex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;=&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;get_facts&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;ansible_private_ipv4_address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_ansible_private_ipv4_address&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;ansible_facts_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ansible_facts&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ansible_private_ipv4_address&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ansible_private_ipv4_address&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ansible_facts_dict&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;code&gt;[root@idc-server1 ansible]# ansible-playbook -u root myfacts.yml -i hosts&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;PLAY [idc1-server2] ***************************************************************

GATHERING FACTS ***************************************************************
ok: [idc1-server2]

TASK: [myfacts | run myfacts module to get customized facts] **************
ok: [idc1-server2]

TASK: [myfacts | update file with the customized facts] *********************
changed: [idc1-server2]

PLAY RECAP ********************************************************************
idc1-server2                   : ok=3    changed=1    unreachable=0    failed=0  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;[root@idc-server1 ansible]# ssh idc1-server2 'cat /tmp/myfacts.txt'&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ansible_private_ipv4_address&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;172.16&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mcsrainbow</dc:creator><pubDate>Thu, 25 Sep 2014 16:47:00 +0800</pubDate><guid isPermaLink="false">tag:mcsrainbow.github.io,2014-09-25:articles/create-an-ansible-module-and-then-use-module-provided-facts.html</guid><category>Ansible</category><category>Facts</category></item><item><title>Hello</title><link>http://mcsrainbow.github.io/articles/hello.html</link><description>&lt;p&gt;Hello Pelican, Markdown and GitHub Pages.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mcsrainbow</dc:creator><pubDate>Wed, 24 Sep 2014 02:06:00 +0800</pubDate><guid isPermaLink="false">tag:mcsrainbow.github.io,2014-09-24:articles/hello.html</guid><category>Pelican</category><category>Markdown</category></item></channel></rss>